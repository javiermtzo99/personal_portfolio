---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

interface Entry {
  data: CollectionEntry<'personal-projects'>['data'];
  slug: string;
}

const raw = await getCollection('personal-projects');
const entries: Entry[] = await Promise.all(
  raw.map(async entry => {
    return { data: entry.data, slug: entry.slug };
  })
);

// Sort entries by order
entries.sort((a, b) => (a.data.order || 0) - (b.data.order || 0));
---

<Layout>
  <div class="projects">
    <h2>Personal Projects</h2>
    <hr />
    <div class="project-content-all-cards">
      {entries.map((entry) => (
        <a href={`/projects/${entry.slug}#main-area`}>
          <div class="project-content-card">
            <div class="card-img">
              <img transition:name={`img-${entry.slug}`} src={entry.data.image} alt={entry.data.title} />
            </div>
            <div class="project-card-content">
              <h3 transition:name={`title-${entry.slug}`}>{entry.data.title}</h3>
              <h4>{entry.data.date}</h4>
              <p>{entry.data.description}</p>
              <div class="project-categories">
                {entry.data.categories.map((category: {name: string, class: string}) => (
                  <span class={`category ${category.class}`}>{category.name}</span>
                ))}
              </div>
            </div>
          </div>
        </a>
      ))}
    </div>
  </div>
</Layout>